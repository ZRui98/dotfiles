#!/usr/bin/env sh
CHANGE=5

usage() {
	echo "Usage: $0 [-c <int|w|tt|h|t|q>] [-d <t|l|b|r>]"
	exit 1
}

while getopts ":c:d:gs" o; do
	case "${o}" in
		c)
			CHANGE=${OPTARG}
			;;
		d)
			DIRECTION=${OPTARG}
			(( "$DIRECTION" == "t" || "$DIRECTION" == "l" || "$DIRECTION" == "b" || "$DIRECTION" == "r" )) || usage
			;;
		*)
			usage
			;;
	esac
done
shift $((OPTIND-1))

if [ -z "${CHANGE}" ] || [ -z "${DIRECTION}" ]; then
	usage
fi

WIN=$(xdotool getactivewindow)
TEXT=$(xwininfo -id "$WIN")
WIDTH=$(sed -n -e 's/^.*Width: //p' <<< $TEXT)
HEIGHT=$(sed -n -e 's/^.*Height: //p' <<< $TEXT)
X_POS=$(sed -n -e 's/^.*Absolute upper-left X: //p' <<< $TEXT)
Y_POS=$(sed -n -e 's/^.*Absolute upper-left Y: //p' <<< $TEXT)
BAR_HEIGHT=$(sed -n -e 's/^.*Relative upper-left Y: //p' <<< $TEXT)

if [ "$DIRECTION" = "t" ] || [ "$DIRECTION" = "b" ]; then
	TARGET=$HEIGHT
elif [ "$DIRECTION" = "l" ] || [ "$DIRECTION" = "r" ]; then
	TARGET=$WIDTH
else
	usage
fi
SIGN=${CHANGE:0:1}
case ${CHANGE//-} in
	w)
		CHANGE=$TARGET
		;;
	tt)
		CHANGE=$(($TARGET * 2 / 3))
		;;
	h)
		CHANGE=$(($TARGET / 2))
		;;
	t)
		CHANGE=$(($TARGET / 3))
		;;
	q)
		CHANGE=$(($TARGET / 4))
		;;
	*)
		if [[ $CHANGE == ^[0-9]+$ ]]; then
			usage
		fi
		;;
	
esac
GAP=0
if [ $SIGN = "-" ]; then
	GAP=7
	if [[ $CHANGE =~ ^[0-9]+$ ]];then
		CHANGE=$(($CHANGE * -1))
	fi
fi
echo $HEIGHT $CHANGE $(($HEIGHT + ( ($CHANGE) / 14 * 14) ))

case $DIRECTION in
	t)
		wmctrl -r :ACTIVE: -e 0,$((X_POS)),$(($Y_POS - $BAR_HEIGHT - $CHANGE/14*14 )),$(($WIDTH)),$(($HEIGHT + ( ($CHANGE) / 14 * 14) ))
		;;
	l)
		wmctrl -r :ACTIVE: -e 0,$((X_POS - ($CHANGE * 10 +35) / 70 * 7 + $GAP)),$(($Y_POS - $BAR_HEIGHT)),$(($WIDTH+ ($CHANGE * 10 +35) / 70 * 7 - $GAP/2 )),$(($HEIGHT))
		;;
	b)
		wmctrl -r :ACTIVE: -e 0,$(($X_POS)),$(($Y_POS - $BAR_HEIGHT)),$(($WIDTH)),$(($HEIGHT + ( ($CHANGE) / 14 * 14) ))
		;;
	r)
		wmctrl -r :ACTIVE: -e 0,$(($X_POS)),$(($Y_POS - $BAR_HEIGHT)),$(($WIDTH+ ($CHANGE * 10 +35) / 70 * 7 - $GAP/2 )),$(($HEIGHT))
		;;
	*)
		;;
esac
